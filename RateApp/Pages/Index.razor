@page "/"
@using System.Text;
@using System.Net.Http.Headers;
@using Microsoft.AspNetCore.Components;
@using Newtonsoft.Json;

@using RateApp.Models;

 

<table class="table">
    <thead>
        <tr>
           
            <th>DaysBegin</th>
            <th>DaysEnd</th>
            <th>Interest</th>
            <th>SrInterest</th>
        </tr>
    </thead>
<tbody>
@foreach (InQuestion inques in Questions)
{
    // Pass the Dto properties to the component
     <tr>
                <td>@inques.DaysBegin</td>
                <td>@inques.DaysEnd</td>
                <td>@inques.Interest</td>
                <td>@inques.SrInterest</td>
            </tr>}
</tbody>
</table>

@code {
     public class InQuestion
  { 
        public int No { get; set; }

        public int DaysBegin { get; set; }

        public int DaysEnd { get; set; }

        public decimal Interest { get; set; }

        public decimal SrInterest { get; set; }

    }
     

 

    public string codex; public string  jsonstring ; public bool statcode;
     List<InQuestion> Questions = new List<InQuestion>();
     public int number; int totalquestions;     int     maxnumber;
     protected override async Task OnInitializedAsync()
    {



        string jwturl = "https://quizapijwt.azurewebsites.net/api/";



        using (var client1 = new HttpClient())
        {
            

              
                client1.BaseAddress = new Uri(jwturl);

                client1.DefaultRequestHeaders.Clear();
                client1.DefaultRequestHeaders.Accept.Add(new MediaTypeWithQualityHeaderValue("application/json"));

                 HttpResponseMessage response = await client1.GetAsync("RateCards");
             
                if (response.IsSuccessStatusCode)
                {
                    //Storing the response details recieved from web api
                      jsonstring = await response.Content.ReadAsStringAsync();
                     
                        try
            {
                   Questions = JsonConvert.DeserializeObject<List<InQuestion>>(jsonstring);

 
            }
            catch (Exception ex)
            {   }
// maxnumber=(from e in Questions select e.No).Max();

                }
            }
            

   
   
        
    }
  }


 
 